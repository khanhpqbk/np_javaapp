/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import main.Main;
import model.Client;

/**
 *
 * @author KHANH
 */
public class Upload extends javax.swing.JFrame {

    File file;
    /**
     * Creates new form Upload
     */
    public Upload() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fileChosenBtn = new javax.swing.JButton();
        infoFileChosen = new javax.swing.JLabel();
        uploadBtn = new javax.swing.JButton();
        infoProcessLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        fileChosenBtn.setText("Upload a file ");
        fileChosenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChosenBtnActionPerformed(evt);
            }
        });

        infoFileChosen.setText("No file chosen !");

        uploadBtn.setText("Submit");
        uploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnActionPerformed(evt);
            }
        });

        infoProcessLabel.setForeground(new java.awt.Color(0, 51, 255));
        infoProcessLabel.setText("Download not available yet.");
        infoProcessLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoProcessLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(fileChosenBtn)
                        .addGap(63, 63, 63)
                        .addComponent(infoFileChosen))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(uploadBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(infoProcessLabel)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileChosenBtn)
                    .addComponent(infoFileChosen))
                .addGap(45, 45, 45)
                .addComponent(uploadBtn)
                .addGap(33, 33, 33)
                .addComponent(infoProcessLabel)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("UPLOAD FILE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileChosenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChosenBtnActionPerformed
        JFileChooser fc = new JFileChooser();
//        fc.setVisible(true);
//        if (e.getSource() == openButton) {
        int returnVal = fc.showOpenDialog(Upload.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
             file = fc.getSelectedFile();
             infoFileChosen.setText(file.getName());
//            System.out.println(file.getName());
        }
        
    }//GEN-LAST:event_fileChosenBtnActionPerformed

    private void uploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnActionPerformed

        Client client = Client.getInstance();
        client.send(Main.COMPRESS);
        client.send(file);
            
        System.out.println("Client has sent file to server");
        
        infoProcessLabel.setText("processing...");
    }//GEN-LAST:event_uploadBtnActionPerformed

    private void infoProcessLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoProcessLabelMouseClicked
//         TODO: unimplemented
//        System.out.println("mouse clicked");
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showSaveDialog(Upload.this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            
            
            
            File fsave = fc.getSelectedFile();

            File fcom = Main.getFileCompressed();
//            System.out.println(getSize(fcom));

            try {
                //            System.out.println(f.getName());
//            File fsave = new File(f.getAbsolutePath());
                FileOutputStream fos = new FileOutputStream(fsave);
                fos.write(getBytes(Main.getFileCompressed()));
                fos.flush();
                fos.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            infoProcessLabel.setText("Download not available yet.");
            
        }
    }//GEN-LAST:event_infoProcessLabelMouseClicked

    public static JLabel getDownloadLabel() {
        return infoProcessLabel;
    }
    
    public int getSize(File f) {
        int j = 0, i;
        try {
            FileInputStream fis = new FileInputStream(f);
            
            while ( (i = fis.read()) != -1 ) {
                j++;
            }
            fis.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return j;
    }
    
    public byte[] getBytes(File f) {
        byte[] arr = new byte[getSize(f)];
        byte b;
        int i;
        int j = 0;
        try {
            FileInputStream fis = new FileInputStream(f);
            
            while ( (i = fis.read()) != -1 ) {
                arr[j++] = (byte)i;
            }
            fis.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return arr;
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fileChosenBtn;
    private javax.swing.JLabel infoFileChosen;
    private static javax.swing.JLabel infoProcessLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton uploadBtn;
    // End of variables declaration//GEN-END:variables
}
